name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  IMAGE_NAME: scalabit-api
  TOKEN: ${{ secrets.TOKEN }}
  GITHUB_USER: digaso

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: Get dependencies
        run: go mod tidy

      - name: Run tests
        run: go test ./tests/... -v

  lint:
    name: Lint Code
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: Install golangci-lint
        uses: golangci/golangci-lint-action@v6

      - name: Run Linter
        run: golangci-lint run ./...

  security:
    name: Security Check
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: Install gosec
        run: go install github.com/securego/gosec/v2/cmd/gosec@latest

      - name: Run gosec
        run: gosec ./...

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [test, lint, security]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker Image
        run: docker build -t $IMAGE_NAME .

      - name: Save Docker Image
        run: docker save -o scalabit-api.tar scalabit-api

      - name: Upload Docker Image artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: scalabit-api.tar

  deploy:
    name: Deploy to Minikube
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Docker Image artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-image

      - name: Install Minikube
        run: |
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Start Minikube
        run: minikube start --driver=docker

      - name: Use Minikube context
        run: kubectl config use-context minikube

      - name: Load Docker Image into Minikube
        run: minikube image load scalabit-api.tar

      - name: Create Kubernetes Deployment and Service
        run: |
          cat <<EOF | kubectl apply -f -
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: scalabit-api
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: scalabit-api
            template:
              metadata:
                labels:
                  app: scalabit-api
              spec:
                containers:
                  - name: scalabit-api
                    image: scalabit-api
                    imagePullPolicy: Never
                    ports:
                      - containerPort: 8080
          ---
          apiVersion: v1
          kind: Service
          metadata:
            name: scalabit-api-service
          spec:
            selector:
              app: scalabit-api
            ports:
              - protocol: TCP
                port: 8080
                targetPort: 8080
            type: NodePort
          EOF

      - name: Verify Deployment
        run: kubectl get pods -o wide

      - name: Wait for Deployment rollout
        run: |
          echo "Waiting for scalabit-api deployment to complete..."
          kubectl rollout status deployment/scalabit-api --timeout=120s

      - name: Expose Service URL
        run: |
          URL=$(minikube service scalabit-api-service --url)
          echo "Service URL: $URL"
